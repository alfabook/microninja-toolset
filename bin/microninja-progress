#!/usr/bin/env python

# kano-progress
#
# Copyright (C) 2014 Kano Computing Ltd.
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
#
# usage: kano-progress title=title description=desc buttons=abc:orange:1,bcd:red:2
#
# Copyright (C) 2016 Alfabook srl
# License: http://www.gnu.org/licenses/gpl-2.0.txt GNU General Public License v2
# Some file rebadged with microninja

import os
import sys
import time


if __name__ == '__main__' and __package__ is None:
    dir_path = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
    if dir_path != '/usr':
        sys.path.insert(1, dir_path)

from microninja.gtk3.microninja_progress import KanoProgressBar


def parse_items(args):
    global radio_returnvalue

    pulse = False
    title = "Loading"
    rate = 0.01
    timeout = 2

    for arg in args:
        split = arg.split('=')

        if split[0] == "pulse":
            pulse = True
        if split[0] == "title":
            title = split[1]
        if split[0] == "rate":
            rate = float(split[1])
        if split[0] == "timeout":
            timeout = int(split[1])

    return pulse, title, rate, timeout


def main():
    text = sys.argv[1:]
    pulse, title, rate, timeout = parse_items(text)
    pbar = KanoProgressBar(pulse, title, rate)
    pbar.show_all()
    # For now, only use timeout if the progress bar pulses
    if pulse:
        pbar.set_work_function(time.sleep, timeout)
    pbar.run()


if __name__ == '__main__':
    main()
